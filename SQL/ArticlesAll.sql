SELECT --TOP 1000
GA_ARTICLE,GA_CODEARTICLE,GA_CODEBARRE, GA_FAMILLENIV1,GA_FAMILLENIV2,GA_LIBELLE,
GF_PRIXUNITAIRE, GF_QUALIFPRIX
FROM ARTICLE
INNER JOIN TARIF ON ARTICLE.GA_ARTICLE = TARIF.GF_ARTICLE
--WHERE (GA_CODEARTICLE > @previousScore)
ORDER BY GA_CODEARTICLE
OFFSET 10 ROWS FETCH NEXT 1000 ROWS ONLY;


/*
    Requête avec le stock : Le problème c'est que cette requête est extrêmement lente
    Je crois que le problème c'est que code article n'est pas indexé dans Ligne
*/

SELECT TOP 500
  GA_ARTICLE,GA_CODEARTICLE,GA_CODEBARRE, GA_FAMILLENIV1,GA_FAMILLENIV2,GA_LIBELLE,
  GF_PRIXUNITAIRE, GF_QUALIFPRIX,
  GDI_LIBELLE AS 'Dimension',
  SUM(GL_QTESTOCK) AS 'Stock Disponible'
FROM ARTICLE  
INNER JOIN TARIF ON ARTICLE.GA_ARTICLE = TARIF.GF_ARTICLE
INNER JOIN LIGNE ON LiGNE.GL_CODEARTICLE = ARTICLE.GA_CODEARTICLE 

INNER JOIN DIMENSION ON ARTICLE.GA_CODEDIM1 = DIMENSION.GDI_CODEDIM OR GA_CODEDIM2  = DIMENSION.GDI_CODEDIM
 --OR GA_CODEDIM3  = DIMENSION.GDI_CODEDIM OR GA_CODEDIM4  = DIMENSION.GDI_CODEDIM OR GA_CODEDIM5  = DIMENSION.GDI_CODEDIM
--WHERE (GA_CODEARTICLE > @previousScore)

--WHERE GA_CODEARTICLE='00501-2739' 
GROUP BY Ga_CODEARTICLE, GA_ARTICLE, GA_CODEBARRE,GA_FAMILLENIV1,GA_FAMILLENIV2,GA_LIBELLE,
  GF_PRIXUNITAIRE, GF_QUALIFPRIX


/*
  Dernière querry en date, elle est rapide
  Pour une raison inconnue quand j'enlève le join de la table Tarif tout va plus vite
  ça règle aussi un problème les join ne fonctionnaient plus.
*/
SELECT 5000
  GA_ARTICLE,GA_CODEARTICLE,GA_CODEBARRE, GA_FAMILLENIV1,GA_FAMILLENIV2,GA_LIBELLE, GA_PVHT , GA_PVTTC
  ,ISNULL( GDI_LIBELLE, 'Inconnue') AS 'Dimension'
  ,ISNULL( SUM(GL_QTESTOCK), 0) AS 'Stock Disponible'
FROM ARTICLE  
LEFT JOIN LIGNE ON LiGNE.GL_CODEARTICLE = ARTICLE.GA_CODEARTICLE 
LEFT JOIN DIMENSION ON ARTICLE.GA_CODEDIM1= DIMENSION.GDI_CODEDIM
GROUP BY Ga_CODEARTICLE, GA_DATECREATION, GA_ARTICLE, GA_CODEBARRE,GA_FAMILLENIV1,GA_FAMILLENIV2,GA_LIBELLE, GA_PVHT , GA_PVTTC
,GDI_LIBELLE 
HAVING SUM(GL_QTESTOCK)>0
ORDER BY GA_DATECREATION DESC 
